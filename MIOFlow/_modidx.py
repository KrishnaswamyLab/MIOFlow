# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/MIOFlow/',
                'doc_host': 'https://KrishnaswamyLab.github.io',
                'git_url': 'https://github.com/KrishnaswamyLab/MIOFlow/tree/main/',
                'lib_path': 'MIOFlow'},
  'syms': { 'MIOFlow.constants': {},
            'MIOFlow.datasets': { 'MIOFlow.datasets.construct_diamond': ('datasets.html#construct_diamond', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_diamonds': ('datasets.html#make_diamonds', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_dyngen_data': ('datasets.html#make_dyngen_data', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_eb_data': ('datasets.html#make_eb_data', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_jacks': ('datasets.html#make_jacks', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_rings': ('datasets.html#make_rings', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_swiss_roll': ('datasets.html#make_swiss_roll', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_tree': ('datasets.html#make_tree', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.make_worm_data': ('datasets.html#make_worm_data', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.relabel_data': ('datasets.html#relabel_data', 'MIOFlow/datasets.py'),
                                  'MIOFlow.datasets.rings': ('datasets.html#rings', 'MIOFlow/datasets.py')},
            'MIOFlow.eval': { 'MIOFlow.eval.calculate_nn': ('eval.html#calculate_nn', 'MIOFlow/eval.py'),
                              'MIOFlow.eval.generate_plot_data': ('eval.html#generate_plot_data', 'MIOFlow/eval.py'),
                              'MIOFlow.eval.generate_points': ('eval.html#generate_points', 'MIOFlow/eval.py'),
                              'MIOFlow.eval.generate_tjnet_trajectories': ('eval.html#generate_tjnet_trajectories', 'MIOFlow/eval.py'),
                              'MIOFlow.eval.generate_trajectories': ('eval.html#generate_trajectories', 'MIOFlow/eval.py'),
                              'MIOFlow.eval.get_cell_indexes': ('eval.html#get_cell_indexes', 'MIOFlow/eval.py'),
                              'MIOFlow.eval.get_points_from_trajectories': ('eval.html#get_points_from_trajectories', 'MIOFlow/eval.py')},
            'MIOFlow.exp': { 'MIOFlow.exp.config_exp_logger': ('exp.html#config_exp_logger', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.exp_log_filename': ('exp.html#exp_log_filename', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.exp_param_filename': ('exp.html#exp_param_filename', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.find_exps': ('exp.html#find_exps', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.gen_exp_name': ('exp.html#gen_exp_name', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.is_config_subset': ('exp.html#is_config_subset', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.list_exps': ('exp.html#list_exps', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.load_exp_params': ('exp.html#load_exp_params', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.save_exp_params': ('exp.html#save_exp_params', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.setup_exp': ('exp.html#setup_exp', 'MIOFlow/exp.py'),
                             'MIOFlow.exp.test_exp': ('exp.html#test_exp', 'MIOFlow/exp.py')},
            'MIOFlow.geo': { 'MIOFlow.geo.DiffusionAffinity': ('geo.html#diffusionaffinity', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionAffinity.__init__': ('geo.html#diffusionaffinity.__init__', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionAffinity.fit': ('geo.html#diffusionaffinity.fit', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionDistance': ('geo.html#diffusiondistance', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionDistance.__init__': ('geo.html#diffusiondistance.__init__', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionDistance.compute_custom_diffusion_distance': ( 'geo.html#diffusiondistance.compute_custom_diffusion_distance',
                                                                                                  'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionDistance.compute_stationnary_distrib': ( 'geo.html#diffusiondistance.compute_stationnary_distrib',
                                                                                            'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionDistance.fit': ('geo.html#diffusiondistance.fit', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionMap': ('geo.html#diffusionmap', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionMap.__init__': ('geo.html#diffusionmap.__init__', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.DiffusionMap.fit': ('geo.html#diffusionmap.fit', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.PhateDistance': ('geo.html#phatedistance', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.PhateDistance.__init__': ('geo.html#phatedistance.__init__', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.PhateDistance.fit': ('geo.html#phatedistance.fit', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance': ('geo.html#old_diffusiondistance', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.__init__': ('geo.html#old_diffusiondistance.__init__', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.compute_custom_diffusion_distance': ( 'geo.html#old_diffusiondistance.compute_custom_diffusion_distance',
                                                                                                      'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.compute_density_norm_matrix': ( 'geo.html#old_diffusiondistance.compute_density_norm_matrix',
                                                                                                'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.compute_diffusion_Matrix': ( 'geo.html#old_diffusiondistance.compute_diffusion_matrix',
                                                                                             'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.compute_stationnary_distrib': ( 'geo.html#old_diffusiondistance.compute_stationnary_distrib',
                                                                                                'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.distance_matrix_Pt': ( 'geo.html#old_diffusiondistance.distance_matrix_pt',
                                                                                       'MIOFlow/geo.py'),
                             'MIOFlow.geo.old_DiffusionDistance.fit': ('geo.html#old_diffusiondistance.fit', 'MIOFlow/geo.py'),
                             'MIOFlow.geo.setup_distance': ('geo.html#setup_distance', 'MIOFlow/geo.py')},
            'MIOFlow.losses': { 'MIOFlow.losses.Density_loss': ('losses.html#density_loss', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.Density_loss.__call__': ('losses.html#density_loss.__call__', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.Density_loss.__init__': ('losses.html#density_loss.__init__', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.Local_density_loss': ('losses.html#local_density_loss', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.Local_density_loss.__call__': ( 'losses.html#local_density_loss.__call__',
                                                                                'MIOFlow/losses.py'),
                                'MIOFlow.losses.Local_density_loss.__init__': ( 'losses.html#local_density_loss.__init__',
                                                                                'MIOFlow/losses.py'),
                                'MIOFlow.losses.MMD_loss': ('losses.html#mmd_loss', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.MMD_loss.__init__': ('losses.html#mmd_loss.__init__', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.MMD_loss.forward': ('losses.html#mmd_loss.forward', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.MMD_loss.guassian_kernel': ('losses.html#mmd_loss.guassian_kernel', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.OT_loss': ('losses.html#ot_loss', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.OT_loss.__call__': ('losses.html#ot_loss.__call__', 'MIOFlow/losses.py'),
                                'MIOFlow.losses.OT_loss.__init__': ('losses.html#ot_loss.__init__', 'MIOFlow/losses.py')},
            'MIOFlow.models': { 'MIOFlow.models.Autoencoder': ('models.html#autoencoder', 'MIOFlow/models.py'),
                                'MIOFlow.models.Autoencoder.__init__': ('models.html#autoencoder.__init__', 'MIOFlow/models.py'),
                                'MIOFlow.models.Autoencoder.decode': ('models.html#autoencoder.decode', 'MIOFlow/models.py'),
                                'MIOFlow.models.Autoencoder.encode': ('models.html#autoencoder.encode', 'MIOFlow/models.py'),
                                'MIOFlow.models.Autoencoder.forward': ('models.html#autoencoder.forward', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToyModel': ('models.html#toymodel', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToyModel.__init__': ('models.html#toymodel.__init__', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToyModel.forward': ('models.html#toymodel.forward', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToyODE': ('models.html#toyode', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToyODE.__init__': ('models.html#toyode.__init__', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToyODE.forward': ('models.html#toyode.forward', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToySDEModel': ('models.html#toysdemodel', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToySDEModel.__init__': ('models.html#toysdemodel.__init__', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToySDEModel.f': ('models.html#toysdemodel.f', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToySDEModel.forward': ('models.html#toysdemodel.forward', 'MIOFlow/models.py'),
                                'MIOFlow.models.ToySDEModel.g': ('models.html#toysdemodel.g', 'MIOFlow/models.py'),
                                'MIOFlow.models.make_model': ('models.html#make_model', 'MIOFlow/models.py')},
            'MIOFlow.ode': { 'MIOFlow.ode.NeuralODE': ('ode.html#neuralode', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.NeuralODE.__init__': ('ode.html#neuralode.__init__', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.NeuralODE.forward': ('ode.html#neuralode.forward', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ODEAdjoint': ('ode.html#odeadjoint', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ODEAdjoint.backward': ('ode.html#odeadjoint.backward', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ODEAdjoint.forward': ('ode.html#odeadjoint.forward', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ODEF': ('ode.html#odef', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ODEF.flatten_parameters': ('ode.html#odef.flatten_parameters', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ODEF.forward_with_grad': ('ode.html#odef.forward_with_grad', 'MIOFlow/ode.py'),
                             'MIOFlow.ode.ode_solve': ('ode.html#ode_solve', 'MIOFlow/ode.py')},
            'MIOFlow.plots': { 'MIOFlow.plots.new_plot_comparisions': ('plots.html#new_plot_comparisions', 'MIOFlow/plots.py'),
                               'MIOFlow.plots.plot_comparision': ('plots.html#plot_comparision', 'MIOFlow/plots.py'),
                               'MIOFlow.plots.plot_gene_trends': ('plots.html#plot_gene_trends', 'MIOFlow/plots.py'),
                               'MIOFlow.plots.plot_losses': ('plots.html#plot_losses', 'MIOFlow/plots.py')},
            'MIOFlow.train': { 'MIOFlow.train.train': ('train.html#train', 'MIOFlow/train.py'),
                               'MIOFlow.train.train_ae': ('train.html#train_ae', 'MIOFlow/train.py'),
                               'MIOFlow.train.training_regimen': ('train.html#training_regimen', 'MIOFlow/train.py')},
            'MIOFlow.utils': { 'MIOFlow.utils.config_criterion': ('utils.html#config_criterion', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.config_hold_out': ('utils.html#config_hold_out', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.generate_steps': ('utils.html#generate_steps', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.get_cell_types_from_df': ('utils.html#get_cell_types_from_df', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.get_groups_from_df': ('utils.html#get_groups_from_df', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.get_sample_n_from_df': ('utils.html#get_sample_n_from_df', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.get_times_from_groups': ('utils.html#get_times_from_groups', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.group_extract': ('utils.html#group_extract', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.sample': ('utils.html#sample', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.set_seeds': ('utils.html#set_seeds', 'MIOFlow/utils.py'),
                               'MIOFlow.utils.to_np': ('utils.html#to_np', 'MIOFlow/utils.py')}}}